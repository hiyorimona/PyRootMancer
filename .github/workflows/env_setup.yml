name: Production

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pages: write
  attestations: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  IMAGE_NAME: pyrootmancer-image

jobs:
  Environment-SetUp:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.python.outputs.python-version }}-

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Build and push Docker image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"          
          echo "${{ secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          
          IMAGE_ID_GHCR=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID_GHCR=$(echo $IMAGE_ID_GHCR | tr '[A-Z]' '[a-z]')
          
          IMAGE_ID_DOCKERHUB=${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
          IMAGE_ID_DOCKERHUB=$(echo $IMAGE_ID_DOCKERHUB | tr '[A-Z]' '[a-z]')
          
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')          
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID_GHCR=$IMAGE_ID_GHCR
          echo IMAGE_ID_DOCKERHUB=$IMAGE_ID_DOCKERHUB
          echo VERSION=$VERSION
          
          # Tag and push to GitHub Container Registry
          docker tag $IMAGE_NAME $IMAGE_ID_GHCR:$VERSION
          docker push $IMAGE_ID_GHCR:$VERSION
          
          # Tag and push to Docker Hub
          docker tag $IMAGE_NAME $IMAGE_ID_DOCKERHUB:$VERSION
          docker push $IMAGE_ID_DOCKERHUB:$VERSION